global:
  multitenancy:
    enabled: true
  ingress:
    enabled: true
    className: nginx
    host: "example.de"
    tls:
      enabled: true
      secretName: camunda-tls
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      ingress.kubernetes.io/rewrite-target: "/"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
  identity:
    keycloak:
      url: 
        protocol: "https"
        host: "keycloak.example.de"
        port: "443"
      contextPath: "/"
      realm: "/realms/camunda-platform"
      auth:
        adminUser: "admin"
        existingSecret: "keycloak"
        existingSecretKey: "admin-password"
    auth:
      publicIssuerUrl: "https://keycloak.example.de/realms/camunda-platform"
      operate:
        redirectUrl: "https://example.de/operate"
      tasklist:
        redirectUrl: "https://example.de/tasklist"
      optimize:
        redirectUrl: "https://example.de/optimize"

zeebeGateway:
  env:
    - name: JAVA_TOOL_OPTIONS
      value: "-Djavax.net.ssl.trustStore=/etc/ssl/certs/keycloak-truststore.jks -Djavax.net.ssl.trustStorePassword=changeit"
  extraVolumes:
    - name: truststore-volume
      secret:
        secretName: keycloak-truststore
  extraVolumeMounts:
    - name: truststore-volume
      mountPath: /etc/ssl/certs/keycloak-truststore.jks
      subPath: keycloak-truststore.jks
      
identity:
  contextPath: "/identity"
  env:
    - name: JAVA_TOOL_OPTIONS
      value: "-Djavax.net.ssl.trustStore=/etc/ssl/certs/keycloak-truststore.jks -Djavax.net.ssl.trustStorePassword=changeit"
  extraVolumes:
    - name: truststore-volume
      secret:
        secretName: keycloak-truststore
  extraVolumeMounts:
    - name: truststore-volume
      mountPath: /etc/ssl/certs/keycloak-truststore.jks
      subPath: keycloak-truststore.jks

identityKeycloak:
  enabled: false

identityPostgresql:
  enabled: true

operate:
  contextPath: "/operate"
  env:
    - name: JAVA_TOOL_OPTIONS
      value: "-Djavax.net.ssl.trustStore=/etc/ssl/certs/keycloak-truststore.jks -Djavax.net.ssl.trustStorePassword=changeit"
  extraVolumes:
    - name: truststore-volume
      secret:
        secretName: keycloak-truststore
  extraVolumeMounts:
    - name: truststore-volume
      mountPath: /etc/ssl/certs/keycloak-truststore.jks
      subPath: keycloak-truststore.jks


optimize:
  contextPath: "/optimize"
  env:
    - name: JAVA_TOOL_OPTIONS
      value: "-Djavax.net.ssl.trustStore=/etc/ssl/certs/keycloak-truststore.jks -Djavax.net.ssl.trustStorePassword=changeit"
  extraVolumes:
    - name: truststore-volume
      secret:
        secretName: keycloak-truststore
  extraVolumeMounts:
    - name: truststore-volume
      mountPath: /etc/ssl/certs/keycloak-truststore.jks
      subPath: keycloak-truststore.jks

tasklist:
  contextPath: "/tasklist"
  env:
    - name: JAVA_TOOL_OPTIONS
      value: "-Djavax.net.ssl.trustStore=/etc/ssl/certs/keycloak-truststore.jks -Djavax.net.ssl.trustStorePassword=changeit"
  extraVolumes:
    - name: truststore-volume
      secret:
        secretName: keycloak-truststore
  extraVolumeMounts:
    - name: truststore-volume
      mountPath: /etc/ssl/certs/keycloak-truststore.jks
      subPath: keycloak-truststore.jks

connectors:
  env:
    - name: JAVA_TOOL_OPTIONS
      value: "-Djavax.net.ssl.trustStore=/etc/ssl/certs/keycloak-truststore.jks -Djavax.net.ssl.trustStorePassword=changeit"
  extraVolumes:
    - name: truststore-volume
      secret:
        secretName: keycloak-truststore
  extraVolumeMounts:
    - name: truststore-volume
      mountPath: /etc/ssl/certs/keycloak-truststore.jks
      subPath: keycloak-truststore.jks

